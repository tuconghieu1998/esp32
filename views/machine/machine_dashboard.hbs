<div class="container mt-5">
    <h2>Weaving Machine Dashboard</h2>
    <!-- Date Filter -->
    <div class="row mb-4 mt-4">
        <div class="col-md-3">
            <label for="machine-id" class="form-label"><strong>Machine Number</strong></label>
            <input type="text" name="machine-id" id="machine-id" class="form-control"
                value="{{formatMachineId machine_id}}" placeholder="Machine No">
        </div>
        <div class="col-md-3">
            <label for="time" class="form-label"><strong>Date</strong></label>
            <div class="input-group date">
                <input type="text" name="time" id="time" class="form-control" placeholder="Date">
                <button type="submit" class="btn btn-primary" id="search-btn"><i class="bi bi-funnel"></i>
                    Search</button>
            </div>
        </div>
    </div>
    <div class="row text-center mb-4">
        <!-- Percent Running -->
        <div class="col-md-3 mb-4">
            <div class="card border-primary">
                <div class="card-body">
                    <h5 class="card-title text-primary">Percent Running</h5>
                    <p id="percent-running" class="card-text display-4">{{percentRunning}}%</p>
                </div>
            </div>
        </div>

        <!-- Hours Running -->
        <div class="col-md-3 mb-4">
            <div class="card border-success">
                <div class="card-body">
                    <h5 class="card-title text-success">Hours Running</h5>
                    <p id="time-running" class="card-text display-4">{{timeRunning}}</p>
                </div>
            </div>
        </div>

        <!-- Hours Stopped -->
        <div class="col-md-3 mb-4">
            <div class="card border-danger">
                <div class="card-body">
                    <h5 class="card-title text-danger">Hours Stopped</h5>
                    <p id="time-stopped" class="card-text display-4">{{timeStopped}}</p>
                </div>
            </div>
        </div>

        <!-- Hours Change Over -->
        <div class="col-md-3 mb-4">
            <div class="card border-warning">
                <div class="card-body">
                    <h5 class="card-title text-warning">Change Over</h5>
                    <p id="time-changeover" class="card-text display-4">{{timeChangeOver}}</p>
                </div>
            </div>
        </div>
    </div>

    <div class="card flex-fill p-4">
        <h5>Working Timeline</h5>
        <div class="mb-2 d-flex gap-1 align-items-center">
            <div><strong>Status Legend:</strong></div>
            <div class="legend-box running"></div><span>Running</span>
            <div class="legend-box stopped"></div><span>Stopped</span>
            <div class="legend-box changeover"></div><span>Changeover</span>
            <div class="legend-box disconnected"></div><span>Disconnected</span>
        </div>
        <div class="timeline-container" id="timeline-container"></div>
        <div class="timeline-hours d-flex justify-content-between mt-1">
            <span>0h</span>
            <span>6h</span>
            <span>12h</span>
            <span>18h</span>
            <span>24h</span>
        </div>
        <!-- Timeline rows -->
        <div class="mb-3">
            <div class="timeline-date">28/05</div>
            <div class="timeline-container">
                <div class="timeline-block running" style="left: 0%; width: 22.4%;" data-start="08:50" data-end="10:40"
                    data-duration="1h 50m">Running</div>
                <div class="timeline-block stopped" style="left: 22.4%; width: 14.3%;" data-start="10:40"
                    data-end="11:50" data-duration="1h 10m">Stopped</div>
                <div class="timeline-block running" style="left: 36.7%; width: 36.7%;" data-start="11:50"
                    data-end="14:50" data-duration="3h 0m">Running</div>
                <div class="timeline-block changeover" style="left: 73.4%; width: 4.1%;" data-start="14:50"
                    data-end="15:10" data-duration="20m">Changeover</div>
                <div class="timeline-block running" style="left: 77.5%; width: 22.4%;" data-start="15:10"
                    data-end="17:00" data-duration="1h 50m">Running</div>
            </div>
        </div>

        <div class="mb-3">
            <div class="timeline-date">29/05</div>
            <div class="timeline-container">
                <div class="timeline-block running" style="left: 0%; width: 22.4%;" data-start="08:50" data-end="10:40"
                    data-duration="1h 50m">Running</div>
                <div class="timeline-block stopped" style="left: 22.4%; width: 14.3%;" data-start="10:40"
                    data-end="11:50" data-duration="1h 10m">Stopped</div>
                <div class="timeline-block running" style="left: 36.7%; width: 36.7%;" data-start="11:50"
                    data-end="14:50" data-duration="3h 0m">Running</div>
                <div class="timeline-block changeover" style="left: 73.4%; width: 4.1%;" data-start="14:50"
                    data-end="15:10" data-duration="20m">Changeover</div>
                <div class="timeline-block running" style="left: 77.5%; width: 22.4%;" data-start="15:10"
                    data-end="17:00" data-duration="1h 50m">Running</div>
            </div>
        </div>

        <div class="mb-3">
            <div class="timeline-date">30/05</div>
            <div class="timeline-container">
                <div class="timeline-block running" style="left: 0%; width: 22.4%;" data-start="08:50" data-end="10:40"
                    data-duration="1h 50m">Running</div>
                <div class="timeline-block stopped" style="left: 22.4%; width: 14.3%;" data-start="10:40"
                    data-end="11:50" data-duration="1h 10m">Stopped</div>
                <div class="timeline-block running" style="left: 36.7%; width: 36.7%;" data-start="11:50"
                    data-end="14:50" data-duration="3h 0m">Running</div>
                <div class="timeline-block changeover" style="left: 73.4%; width: 4.1%;" data-start="14:50"
                    data-end="15:10" data-duration="20m">Changeover</div>
                <div class="timeline-block running" style="left: 77.5%; width: 22.4%;" data-start="15:10"
                    data-end="17:00" data-duration="1h 50m">Running</div>
            </div>
        </div>

        <!-- Time labels below last timeline only -->
        <div class="time-labels mb-5">
            <span>08:50</span>
            <span>10:00</span>
            <span>12:00</span>
            <span>14:00</span>
            <span>16:00</span>
            <span>17:00</span>
        </div>

    </div>

    <div class="card flex-fill p-4">
        <h3>Working in month</h3>
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="input-group date">
                    <input type="text" id="monthpicker" class="form-control w-25" placeholder="Select Month" />
                    <button id="btn-select-month" type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                        Search</button>
                </div>
            </div>
        </div>

        <div class="calendar" id="calendar-header">
            <!-- Weekday headers -->
            <div><strong>Sun</strong></div>
            <div><strong>Mon</strong></div>
            <div><strong>Tue</strong></div>
            <div><strong>Wed</strong></div>
            <div><strong>Thu</strong></div>
            <div><strong>Fri</strong></div>
            <div><strong>Sat</strong></div>
        </div>
        <div class="calendar" id="calendar">
        </div>
    </div>
</div>
<!-- Tooltip element -->
<div id="custom-tooltip"></div>

<script>
    const tooltip = document.getElementById('custom-tooltip');

    document.querySelectorAll('.timeline-block').forEach(block => {
        block.addEventListener('mousemove', (e) => {
            const start = block.getAttribute('data-start');
            const end = block.getAttribute('data-end');
            const duration = block.getAttribute('data-duration');

            tooltip.style.opacity = '1';
            tooltip.style.left = e.pageX + 15 + 'px';  // offset a bit right
            tooltip.style.top = e.pageY + 15 + 'px';   // offset a bit down

            tooltip.innerHTML = `
                <div><strong>${start} - ${end}</strong></div>
                <div><strong>Duration:</strong> ${duration}</div>
            `;
        });

        block.addEventListener('mouseleave', () => {
            tooltip.style.opacity = '0';
        });
    });

    function formatMachineId(id) {
        return '#' + String(id).padStart(3, '0');
    }

    $(document).ready(function () {
        $('#time').datepicker({
            format: 'dd/mm/yyyy', // Format to match your filter
            autoclose: true,
            todayHighlight: true
        }).datepicker('setDate', new Date());

        $('#monthpicker').datepicker({
            format: "mm/yyyy",       // show month/year only
            startView: "months",     // start view at months
            minViewMode: "months",   // limit selection to months only
            autoclose: true
        }).datepicker('setDate', new Date());

        $('#search-btn').click(function (e) {
            e.preventDefault();
            let machineIdStr = $("#machine-id").val();
            let date = $("#time").val();
            machineIdStr = machineIdStr.replace('#', '');
            if (isNaN(Number(machineIdStr))) {
                alert("Machine ID invalid!");
                return;
            }
            let machine_id = Number(machineIdStr);

            $.ajax({
                url: `/machine/api/machine-dashboard`,
                method: "GET",
                data: { machine_id, date },
                dataType: "json",
                success: function (response) {
                    console.log(response.workingTime);
                    if (response.workingTime) {
                        const {
                            percentRunning,
                            timeRunning,
                            timeStopped,
                            timeDisconnected,
                            timeChangeOver
                        } = response.workingTime;

                        $('#machine-id').val(formatMachineId(machine_id));

                        const e1 = $('#percent-running');
                        e1.fadeOut(200, function () {
                            $(this).text(percentRunning + '%').fadeIn(200);
                        });

                        const e2 = $('#time-running');
                        e2.fadeOut(200, function () {
                            $(this).text(timeRunning).fadeIn(200);
                        });

                        const e3 = $('#time-stopped');
                        e3.fadeOut(200, function () {
                            $(this).text(timeStopped).fadeIn(200);
                        });

                        const e4 = $('#time-changeover');
                        e4.fadeOut(200, function () {
                            $(this).text(timeChangeOver).fadeIn(200);
                        });
                    }
                }
            });
        });

        function loadTimeline() {
            let machine_id = '1';
            let date = '10/06/2025';
            console.log('loadTimeline', machine_id, date);
            $.ajax({
                url: `/machine/api/machine-timeline`,
                method: "GET",
                data: { machine_id, date },
                dataType: "json",
                success: function (response) {
                    console.log(response.data);
                    renderTimeline(response.data); // gọi hàm render với dữ liệu
                },
                error: function () {
                    alert("Failed to load timeline data.");
                }
            });
        }

        function renderTimeline(data) {
            const container = document.getElementById("timeline-container");
            container.innerHTML = "";

            const totalMinutes = 1440; // 24 * 60

            data.forEach(block => {
                const start = new Date(block.start_time.replace('Z', ''));
                const end = new Date(block.end_time.replace('Z', ''));

                const startMinutes = start.getHours() * 60 + start.getMinutes();
                const endMinutes = end.getHours() * 60 + end.getMinutes();

                const leftPercent = (startMinutes / totalMinutes) * 100;
                const widthPercent = ((endMinutes - startMinutes) / totalMinutes) * 100;

                const div = document.createElement("div");
                div.className = `timeline-block ${block.status}`;
                div.style.left = `${leftPercent}%`;
                div.style.width = `${widthPercent}%`;
                div.dataset.start = block.data_start;
                div.dataset.end = block.data_end;
                div.dataset.duration = block.data_duration;

                container.appendChild(div);
            });
        }

        // Helper: tính thời gian phút giữa 2 timestamp
        function getDurationInMinutes(start, end) {
            const startTime = new Date(start);
            const endTime = new Date(end);
            return Math.floor((endTime - startTime) / 60000); // milliseconds to minutes
        }

        // Helper: viết hoa chữ cái đầu
        function capitalizeFirstLetter(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }

        loadTimeline();
    });
</script>

<script>
    function getBadgeClass(percent) {
        if (percent >= 75) return 'percent-high';
        if (percent >= 50) return 'percent-medium';
        return 'percent-low';
    }

    function createDayCell(day, month, year, percent) {
        const cell = document.createElement('div');
        cell.classList.add('day-cell');
        cell.title = `${day}/${month + 1}/${year}: ${percent}% running`;

        const dayNum = document.createElement('div');
        dayNum.classList.add('day-number');
        dayNum.textContent = day;
        cell.appendChild(dayNum);

        const badge = document.createElement('div');
        badge.classList.add('percent-badge', getBadgeClass(percent));
        badge.textContent = percent + '%';
        cell.appendChild(badge);

        return cell;
    }

    function generatePercentData(daysInMonth) {
        const data = {};
        for (let d = 1; d <= daysInMonth; d++) {
            data[d] = Math.floor(Math.random() * 70) + 30;
        }
        return data;
    }

    function generateCalendar(month, year) {
        const calendar = document.getElementById('calendar');
        calendar.innerHTML = ''; // Clear existing content

        const daysInMonth = new Date(year, month + 1, 0).getDate();
        const firstDay = new Date(year, month, 1).getDay(); // 0 = Sunday

        const percentData = generatePercentData(daysInMonth);

        // Add blank cells
        for (let i = 0; i < firstDay; i++) {
            const emptyCell = document.createElement('div');
            calendar.appendChild(emptyCell);
        }

        // Add days
        for (let day = 1; day <= daysInMonth; day++) {
            calendar.appendChild(createDayCell(day, month, year, percentData[day]));
        }
    }

    // Initial calendar for current month
    const now = new Date();
    generateCalendar(now.getMonth(), now.getFullYear());

    // When month is selected
    $('#btn-select-month').on('click', function () {
        const val = $('#monthpicker').val(); // Format: mm/yyyy
        if (!val) return;

        const parts = val.split('/');
        const month = parseInt(parts[0], 10) - 1;
        const year = parseInt(parts[1], 10);

        generateCalendar(month, year);
    });
</script>