<main class="content">
    <div class="container">
        <h2>Workshop 2 Dashboard</h2>
        <!-- Date Filter -->
        <div class="row mb-4 mt-4">
            <div class="col-md-3">
                <div class="input-group date">
                    <input type="text" name="time" id="time" class="form-control" placeholder="Date">
                    <button id="search-btn" type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                        Search</button>
                </div>
            </div>
        </div>
        <div class="row text-center">
            <!-- Percent Running -->
            <div class="col-md-6 mb-2">
                <div class="card border-primary">
                    <div class="card-body">
                        <h5 class="card-title text-primary">Total Percent</h5>
                        <p id="max-percent" class="card-text display-4">{{max_percent}}%</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-2">
                <div class="card border-success">
                    <div class="card-body">
                        <h5 class="card-title text-success">Percent Running</h5>

                        <div class="d-flex justify-content-center align-items-center gap-4">
                            <!-- Left: Main percent -->
                            <p id="percent-running" class="card-text display-4 mb-0 mr-3">
                                {{percent_running}}%
                            </p>
                            <p id="sub-percent" class="card-text display-4 mb-0 mr-3">
                                (-{{sub_percent}}%)
                            </p>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row text-center mb-4">
            <!-- Hours Running -->
            <div class="col-md-4 mb-4">
                <div class="card border-success">
                    <div class="card-body">
                        <h5 class="card-title text-success">Hours Running</h5>
                        <p id="time-running" class="card-text display-4">{{convertDecimalHoursToTime running_hours}}</p>
                    </div>
                </div>
            </div>

            <!-- Hours Stopped -->
            <div class="col-md-4 mb-4">
                <div class="card border-danger">
                    <div class="card-body">
                        <h5 class="card-title text-danger">Hours Stopped</h5>
                        <p id="time-stopped" class="card-text display-4">{{convertDecimalHoursToTime stopped_hours}}</p>
                    </div>
                </div>
            </div>

            <!-- Hours Change Over -->
            <div class="col-md-4 mb-4">
                <div class="card border-warning">
                    <div class="card-body">
                        <h5 class="card-title text-warning">Change Over</h5>
                        <p id="time-changeover" class="card-text display-4">{{convertDecimalHoursToTime
                            changeover_hours}}
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="card flex-fill p-4">
            <h3>Working in month</h3>
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="input-group date">
                        <input type="text" id="monthpicker" class="form-control w-25" placeholder="Select Month" />
                        <button id="btn-search-month" type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                            Search</button>
                    </div>
                </div>
            </div>

            <div class="calendar" id="calendar-header">
                <!-- Weekday headers -->
                <div><strong>Sun</strong></div>
                <div><strong>Mon</strong></div>
                <div><strong>Tue</strong></div>
                <div><strong>Wed</strong></div>
                <div><strong>Thu</strong></div>
                <div><strong>Fri</strong></div>
                <div><strong>Sat</strong></div>
            </div>
            <div class="calendar" id="calendar">
            </div>
        </div>
    </div>
    <!-- Machine Detail Modal -->
    <div class="modal fade" id="workshopDashboardModal" tabindex="-1" aria-labelledby="workshopDashboardModalLabel"
        aria-hidden="true" data-id="">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="workshopDashboardModalLabel">Workshop 2</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="p-3" id="modalDashoardContent">
                    <div class="row mb-4 mt-4">
                        <div class="col-md-3">
                            <div class="input-group date">
                                <input type="text" name="time" id="modal-time" class="form-control" placeholder="Date">
                                <button id="modal-search-btn" type="submit" class="btn btn-primary"><i
                                        class="bi bi-funnel"></i>
                                    Search</button>
                            </div>
                        </div>
                    </div>
                    <div class="row text-center">
                        <div class="col-md-6 mb-2">
                            <div class="card border-primary">
                                <div class="card-body">
                                    <h5 class="card-title text-primary">Total Percent</h5>
                                    <p id="modal-max-percent" class="card-text display-4">0.00%</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-2">
                            <div class="card border-success">
                                <div class="card-body">
                                    <h5 class="card-title text-success">Percent Running</h5>

                                    <div class="d-flex justify-content-center align-items-center gap-4">
                                        <!-- Left: Main percent -->
                                        <p id="modal-percent-running" class="card-text display-4 mb-0 mr-3">
                                            0.00%
                                        </p>
                                        <p id="modal-sub-percent" class="card-text display-4 mb-0 mr-3">
                                            (-0.00%)
                                        </p>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row text-center mb-4">
                        <!-- Hours Running -->
                        <div class="col-md-4 mb-4">
                            <div class="card border-success">
                                <div class="card-body">
                                    <h5 class="card-title text-success">Hours Running</h5>
                                    <p id="modal-time-running" class="card-text display-4">0:00</p>
                                </div>
                            </div>
                        </div>

                        <!-- Hours Stopped -->
                        <div class="col-md-4 mb-4">
                            <div class="card border-danger">
                                <div class="card-body">
                                    <h5 class="card-title text-danger">Hours Stopped</h5>
                                    <p id="modal-time-stopped" class="card-text display-4">0:00</p>
                                </div>
                            </div>
                        </div>

                        <!-- Hours Change Over -->
                        <div class="col-md-4 mb-4">
                            <div class="card border-warning">
                                <div class="card-body">
                                    <h5 class="card-title text-warning">Change Over</h5>
                                    <p id="modal-time-changeover" class="card-text display-4">0:00</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<script src="/js/machine_utils.js"></script>
<script>
    $(document).ready(function () {
        $('#time').datepicker({
            format: 'dd/mm/yyyy', // Format to match your filter
            autoclose: true,
            todayHighlight: true
        }).datepicker('setDate', new Date());

        $('#monthpicker').datepicker({
            format: "mm/yyyy",       // show month/year only
            startView: "months",     // start view at months
            minViewMode: "months",   // limit selection to months only
            autoclose: true
        }).datepicker('setDate', new Date());

        // loadOverView(getTodayFormatted());
        handleLoadRunningPercentInMonth();
    });

    $('#search-btn').click(function (e) {
        e.preventDefault();
        let date = $("#time").val();
        loadOverView(date);
    });

    function loadOverView(date) {
        $.ajax({
            url: `/machine/api/workshop2-date`,
            method: "GET",
            data: { date },
            dataType: "json",
            success: function (response) {
                console.log("loadOverView", response.data);
                let percent_running = 0, running_hours = 0, stopped_hours = 0, changeover_hours = 0;
                if (response.data && response.data[0]) {
                    percent_running = response.data[0].percent_running;
                    running_hours = response.data[0].running_hours;
                    stopped_hours = response.data[0].stopped_hours;
                    changeover_hours = response.data[0].changeover_hours;
                }

                const percent = getMaxPercentPassedToday(date);
                $("#max-percent").text(percent + "%").fadeIn(200);
                $("#sub-percent").text("(" + -(percent - percent_running).toFixed(2) + "%)").fadeIn(200);

                const e1 = $('#percent-running');
                e1.fadeOut(200, function () {
                    $(this).text(percent_running + '%').fadeIn(200);
                });

                const e2 = $('#time-running');
                e2.fadeOut(200, function () {
                    $(this).text(convertDecimalHoursToTime(running_hours)).fadeIn(200);
                });

                const e3 = $('#time-stopped');
                e3.fadeOut(200, function () {
                    $(this).text(convertDecimalHoursToTime(stopped_hours)).fadeIn(200);
                });

                const e4 = $('#time-changeover');
                e4.fadeOut(200, function () {
                    $(this).text(convertDecimalHoursToTime(changeover_hours)).fadeIn(200);
                });
            },
            error: function () {
                alert('Failed to load running data.');
            }
        });
    }

    $('#btn-search-month').on('click', handleLoadRunningPercentInMonth);

    function handleLoadRunningPercentInMonth() {
        const val = $('#monthpicker').val(); // Format: mm/yyyy
        if (!val) return;

        const parts = val.split('/');
        const month = parseInt(parts[0], 10) - 1;
        const year = parseInt(parts[1], 10);

        // generateCalendar(month, year);
        loadPercentRunningMonth(month, year);
    }

    function loadPercentRunningMonth(month, year) {
        const date = '01/' + (month + 1) + '/' + year;
        $.ajax({
            url: `/machine/api/workshop2-month`,
            method: "GET",
            data: { date },
            dataType: "json",
            success: function (response) {
                const data = response.data || [];
                const percentRunning = {};
                const percentStopped = {};
                const percentChangeover = {};
                for (const entry of data) {
                    const day = new Date(entry.date).getDate();
                    percentRunning[day] = parseFloat(entry.percent_running || 0).toFixed(0);
                    percentStopped[day] = parseFloat(entry.percent_stopped || 0).toFixed(0);
                    percentChangeover[day] = parseFloat(entry.percent_changeover || 0).toFixed(0);
                }
                generateCalendar(month, year, percentRunning, percentStopped, percentChangeover);
            },
            error: function () {
                alert('Failed to load running data.');
            }
        });
    }

    function onDayCellClick(dateStr) {
        let modalElement = document.getElementById('workshopDashboardModal');
        modalElement.setAttribute('data-date', dateStr);
        const modal = new bootstrap.Modal(modalElement);
        modal.show();
    }

    $('#workshopDashboardModal').on('show.bs.modal', function (e) {
        if (e.target != this) return;
        $('#modal-time').datepicker({
            format: 'dd/mm/yyyy', // Format to match your filter
            autoclose: true,
            todayHighlight: true
        }).datepicker('setDate', new Date());
        const date = $('#workshopDashboardModal').attr("data-date");
        $('#modal-time').val(date);
        loadDataModal(date);
    });

    $('#modal-search-btn').click(function (e) {
        e.preventDefault();
        let date = $("#modal-time").val();
        loadDataModal(date);
    });

    function loadDataModal(date) {
        $.ajax({
            url: `/machine/api/workshop2-date`,
            method: "GET",
            data: { date },
            dataType: "json",
            success: function (response) {
                console.log("loadDataModal", response.data);
                let percent_running = 0, running_hours = 0, stopped_hours = 0, changeover_hours = 0;
                if (response.data && response.data[0]) {
                    percent_running = response.data[0].percent_running;
                    running_hours = response.data[0].running_hours;
                    stopped_hours = response.data[0].stopped_hours;
                    changeover_hours = response.data[0].changeover_hours;
                }

                const percent = getMaxPercentPassedToday(date);
                $("#modal-max-percent").text(percent + "%").fadeIn(200);
                $("#modal-sub-percent").text("(" + -(percent - percent_running).toFixed(2) + "%)").fadeIn(200);

                const e1 = $('#modal-percent-running');
                e1.fadeOut(200, function () {
                    $(this).text(percent_running + '%').fadeIn(200);
                });

                const e2 = $('#modal-time-running');
                e2.fadeOut(200, function () {
                    $(this).text(convertDecimalHoursToTime(running_hours)).fadeIn(200);
                });

                const e3 = $('#modal-time-stopped');
                e3.fadeOut(200, function () {
                    $(this).text(convertDecimalHoursToTime(stopped_hours)).fadeIn(200);
                });

                const e4 = $('#modal-time-changeover');
                e4.fadeOut(200, function () {
                    $(this).text(convertDecimalHoursToTime(changeover_hours)).fadeIn(200);
                });
            },
            error: function () {
                alert('Failed to load running data.');
            }
        });
    }

    function createDayCell(day, month, year, running, stopped, changeover) {
        const cell = document.createElement('div');
        cell.classList.add('day-cell');

        const today = new Date();
        const cellDate = new Date(year, month, day);

        const isToday =
            day === today.getDate() &&
            month === today.getMonth() &&
            year === today.getFullYear();

        const isFuture = cellDate > today;

        if (isToday) {
            cell.classList.add('today');
        }
        
        if(Number(running) + Number(stopped) + Number(changeover) > 100) {
            stopped = 100 - running - changeover; // ensure 100%
        }

        cell.title = `${day}/${month + 1}/${year}
Running: ${running}%
Stopped: ${stopped}%
Changeover: ${changeover}%`;

        cell.addEventListener('click', () => {
            const dateStr = `${String(day).padStart(2, '0')}/${String(month + 1).padStart(2, '0')}/${year}`;
            onDayCellClick(dateStr); // Call your handler
        });

        const dayNum = document.createElement('div');
        dayNum.classList.add('day-number');
        dayNum.textContent = day;
        cell.appendChild(dayNum);

        if (!isFuture) {
            const badgesContainer = document.createElement('div');
            badgesContainer.classList.add('percent-badges');

            const runningBadge = document.createElement('div');
            runningBadge.classList.add('percent-badge', 'running-badge', running > 0 ? 'high-value' : 'low-value');
            runningBadge.textContent = `${running}%`;
            badgesContainer.appendChild(runningBadge);

            const stoppedBadge = document.createElement('div');
            stoppedBadge.classList.add('percent-badge', 'stopped-badge', stopped > 0 ? 'high-value' : 'low-value');
            stoppedBadge.textContent = `${stopped}%`;
            badgesContainer.appendChild(stoppedBadge);

            const changeoverBadge = document.createElement('div');
            changeoverBadge.classList.add('percent-badge', 'changeover-badge', changeover > 0 ? 'high-value' : 'low-value');
            changeoverBadge.textContent = `${changeover}%`;
            badgesContainer.appendChild(changeoverBadge);

            cell.appendChild(badgesContainer);
        }

        return cell;
    }


    function generatePercentData(daysInMonth) {
        const data = {};
        for (let d = 1; d <= daysInMonth; d++) {
            data[d] = Math.floor(Math.random() * 70) + 30;
        }
        return data;
    }

    function generateCalendar(month, year, percentRunning, percentStopped, percentChangeover) {
        const calendar = document.getElementById('calendar');
        calendar.innerHTML = ''; // Clear existing content

        const daysInMonth = new Date(year, month + 1, 0).getDate();
        const firstDay = new Date(year, month, 1).getDay(); // 0 = Sunday

        // Add blank cells before the 1st day
        for (let i = 0; i < firstDay; i++) {
            const emptyCell = document.createElement('div');
            calendar.appendChild(emptyCell);
        }

        // Add days
        for (let day = 1; day <= daysInMonth; day++) {
            calendar.appendChild(createDayCell(day, month, year, percentRunning[day] || 0, percentStopped[day] || 0, percentChangeover[day] || 0));
        }
    }
</script>


<script>
    $(document).ready(function() {
        createMachineGrid();
    });
    function createMachineGrid() {
        const grid = document.getElementById("machine-grid");
        if (!grid) return;

        for (let i = 1; i <= 200; i++) {
            const percent = Math.floor(Math.random() * 70) + 30; // Random 30%–100%
            const card = document.createElement("div");
            card.className = "col-6 col-sm-4 col-md-3 col-lg-2";

            const levelClass = percent >= 75 ? 'high' : (percent >= 50 ? 'medium' : 'low');

            card.innerHTML = `
              <div class="machine-card" data-machine-id="${i}">
                <div><strong>Machine #${String(i).padStart(3, '0')}</strong></div>
                <div class="percent ${levelClass}">${percent}%</div>
              </div>
            `;

            grid.appendChild(card);
        }
    }

    document.querySelectorAll('.machine-card').forEach(card => {
        card.addEventListener('click', () => {
            const machineId = card.dataset.machineId;
            showDashboard(machineId);
        });
    });

    function showDashboard(machineId) {
        // Load or render the dashboard (use modal or page section)
        const url = `/machine/machine-dashboard/${machineId}`;
        window.open(url, '_blank');

        // Example: you could fetch data via AJAX or display a hidden section
        // $('#dashboard-section').html(renderMachineDashboard(machineId));
    }
</script>