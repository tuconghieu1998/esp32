<div class="container mt-5">
    <h2>Workshop 2 Dashboard</h2>
    <!-- Date Filter -->
    <div class="row mb-4 mt-4">
        <div class="col-md-3">
            <div class="input-group date">
                <input type="text" name="time" id="time" class="form-control" placeholder="Date">
                <button type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                    Search</button>
            </div>
        </div>
    </div>
    <div class="row text-center mb-4">
        <!-- Percent Running -->
        <div class="col-md-3 mb-4">
            <div class="card border-primary">
                <div class="card-body">
                    <h5 class="card-title text-primary">Percent Running</h5>
                    <p class="card-text display-4">92%</p>
                </div>
            </div>
        </div>

        <!-- Hours Running -->
        <div class="col-md-3 mb-4">
            <div class="card border-success">
                <div class="card-body">
                    <h5 class="card-title text-success">Hours Running</h5>
                    <p class="card-text display-4">1336.2</p>
                </div>
            </div>
        </div>

        <!-- Hours Stopped -->
        <div class="col-md-3 mb-4">
            <div class="card border-danger">
                <div class="card-body">
                    <h5 class="card-title text-danger">Hours Stopped</h5>
                    <p class="card-text display-4">111.1</p>
                </div>
            </div>
        </div>

        <!-- Hours Change Over -->
        <div class="col-md-3 mb-4">
            <div class="card border-warning">
                <div class="card-body">
                    <h5 class="card-title text-warning">Change Over</h5>
                    <p class="card-text display-4">25.7</p>
                </div>
            </div>
        </div>
    </div>

    <div class="card flex-fill p-4">
        <h3>Working in month</h3>
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="input-group date">
                    <input type="text" id="monthpicker" class="form-control w-25" placeholder="Select Month" />
                    <button id="btn-search-month" type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                        Search</button>
                </div>
            </div>
        </div>

        <div class="calendar" id="calendar-header">
            <!-- Weekday headers -->
            <div><strong>Sun</strong></div>
            <div><strong>Mon</strong></div>
            <div><strong>Tue</strong></div>
            <div><strong>Wed</strong></div>
            <div><strong>Thu</strong></div>
            <div><strong>Fri</strong></div>
            <div><strong>Sat</strong></div>
        </div>
        <div class="calendar" id="calendar">
        </div>
    </div>

    <h4 class="mb-3">Machine Performance Overview</h4>
    <div class="row" id="machine-grid"></div>


</div>
<script>
    $(document).ready(function () {
        $('#time').datepicker({
            format: 'dd/mm/yyyy', // Format to match your filter
            autoclose: true,
            todayHighlight: true
        }).datepicker('setDate', new Date());

        $('#monthpicker').datepicker({
            format: "mm/yyyy",       // show month/year only
            startView: "months",     // start view at months
            minViewMode: "months",   // limit selection to months only
            autoclose: true
        }).datepicker('setDate', new Date());
    });

    $('#btn-search-month').on('click', handleLoadRunningPercentInMonth);

    function handleLoadRunningPercentInMonth() {
        const val = $('#monthpicker').val(); // Format: mm/yyyy
        if (!val) return;

        const parts = val.split('/');
        const month = parseInt(parts[0], 10) - 1;
        const year = parseInt(parts[1], 10);

        // generateCalendar(month, year);
        loadPercentRunningMonth(month, year);
    }

    function loadPercentRunningMonth(month, year) {
        const date = '01/' + (month + 1) + '/' + year;
        $.ajax({
            url: `/machine/api/workshop2-month`,
            method: "GET",
            data: { date },
            dataType: "json",
            success: function (response) {
                const data = response.data || [];

                // Convert to { 1: 83, 2: 45, ... }
                const percentData = {};
                for (const entry of data) {
                    const day = new Date(entry.date).getDate();
                    percentData[day] = parseFloat(entry.percent_running || 0).toFixed(0);
                }
                generateCalendar(month, year, percentData);
            },
            error: function () {
                alert('Failed to load running data.');
            }
        });
    }

    function getBadgeClass(percent) {
        if (percent >= 50) return 'percent-high';
        if (percent > 0) return 'percent-medium';
        return 'percent-low';
    }

    function createDayCell(day, month, year, percent) {
        const cell = document.createElement('div');
        cell.classList.add('day-cell');
        cell.title = `${day}/${month + 1}/${year}: ${percent}% running`;

        const dayNum = document.createElement('div');
        dayNum.classList.add('day-number');
        dayNum.textContent = day;
        cell.appendChild(dayNum);

        const badge = document.createElement('div');
        badge.classList.add('percent-badge', getBadgeClass(percent));
        badge.textContent = percent + '%';
        cell.appendChild(badge);

        return cell;
    }

    function generatePercentData(daysInMonth) {
        const data = {};
        for (let d = 1; d <= daysInMonth; d++) {
            data[d] = Math.floor(Math.random() * 70) + 30;
        }
        return data;
    }

    function generateCalendar(month, year, percentData) {
        const calendar = document.getElementById('calendar');
        calendar.innerHTML = ''; // Clear existing content

        const daysInMonth = new Date(year, month + 1, 0).getDate();
        const firstDay = new Date(year, month, 1).getDay(); // 0 = Sunday

        // Add blank cells before the 1st day
        for (let i = 0; i < firstDay; i++) {
            const emptyCell = document.createElement('div');
            calendar.appendChild(emptyCell);
        }

        // Add days
        for (let day = 1; day <= daysInMonth; day++) {
            const percent = percentData[day] || 0; // default to 0 if no data
            calendar.appendChild(createDayCell(day, month, year, percent));
        }
    }
</script>

<script>
    const grid = document.getElementById("machine-grid");

    for (let i = 1; i <= 200; i++) {
        const percent = Math.floor(Math.random() * 70) + 30; // Random 30%â€“100%
        const card = document.createElement("div");
        card.className = "col-6 col-sm-4 col-md-3 col-lg-2";

        const levelClass = percent >= 75 ? 'high' : (percent >= 50 ? 'medium' : 'low');

        card.innerHTML = `
      <div class="machine-card" data-machine-id="${i}">
        <div><strong>Machine #${String(i).padStart(3, '0')}</strong></div>
        <div class="percent ${levelClass}">${percent}%</div>
      </div>
    `;

        grid.appendChild(card);
    }

    document.querySelectorAll('.machine-card').forEach(card => {
        card.addEventListener('click', () => {
            const machineId = card.dataset.machineId;
            showDashboard(machineId);
        });
    });

    function showDashboard(machineId) {
        // Load or render the dashboard (use modal or page section)
        const url = `/machine/machine-dashboard/${machineId}`;
        window.open(url, '_blank');

        // Example: you could fetch data via AJAX or display a hidden section
        // $('#dashboard-section').html(renderMachineDashboard(machineId));
    }
</script>