<main class="content">
    <div class="container-fluid p-0">
        <h2 class="h3 mb-3">Chart</h2>
        <div class="row">
            <div class="row">
                <div class="col-12 col-lg-8 col-xxl-9 d-flex">
                    <div class="card flex-fill">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Details Data</h5>
                        </div>
                        <div>
                            <form method="GET" id="filterForm" class="row g-3 p-2">
                                <!-- Sensors Filter -->
                                <div class="col-md-3">
                                    <label for="filter-type" class="form-label">Chart type</label>
                                    <select name="filter-type" id="filter-type" class="form-select">
                                        <option value="temperatures" selected>Temperature</option>
                                        <option value="humidities">Humidity</option>
                                        <option value="sounds">Sound</option>
                                        <option value="lights">Light</option>
                                    </select>
                                </div>

                                <!-- Date Filter -->
                                <div class="col-md-3">
                                    <label for="time" class="form-label">Date (dd/mm/yyyy)</label>
                                    <div class="input-group date">
                                        <input type="text" name="time" id="time" class="form-control"
                                            placeholder="Date">
                                        <button type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                                            Filter</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="p-2">
                            <a href="javascript:void(0)" onclick="exportExcel()" class="btn btn-success">
                                <i class="fas fa-file-excel"></i> Export to Excel
                            </a>
                        </div>
                        <div class="card-body py-3">
                            <div class="chart chart-sm" style="height: 60vh;">
                                <canvas id="chartjs-dashboard-line"></canvas>
                            </div>
                        </div>
                        <table class="table table-hover my-0">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th class="d-none d-xl-table-cell">Factory</th>
                                    <th class="d-none d-md-table-cell">Temperature(&deg;C)</th>
                                    <th class="d-none d-md-table-cell">Humidity(%)</th>
                                    <th class="d-none d-md-table-cell">Sound(dB)</th>
                                    <th class="d-none d-md-table-cell">Light(Lux)</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody id="tableBody">
                                {{#each data}}
                                <tr>
                                    <td>{{increment @index}}</td>
                                    <td class="d-none d-xl-table-cell">{{factory}}</td>
                                    <td class="d-none d-xl-table-cell">{{avg_temperature}}</td>
                                    <td class="d-none d-xl-table-cell">{{avg_humidity}}</td>
                                    <td class="d-none d-md-table-cell">{{avg_sound}}</td>
                                    <td class="d-none d-md-table-cell">{{avg_light}}</td>
                                    <td class="d-none d-md-table-cell">{{date}}</td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>
                        <!-- Pagination Buttons -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center mt-3" id="pagination">
                                <!-- Previous Button -->
                                {{#if (gt currentPage 1)}}
                                <li class="page-item">
                                    <a class="page-link" href="#" data-page="{{sub currentPage 1}}">&laquo;</a>
                                </li>
                                {{/if}}

                                <!-- First Page -->
                                <li class="page-item {{#if (eq 1 currentPage)}}active{{/if}}">
                                    <a class="page-link" href="#" data-page="1">1</a>
                                </li>

                                <!-- Left Ellipsis -->
                                {{#if (gt currentPage 4)}}
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                                {{/if}}

                                <!-- Page Numbers Around Current -->
                                {{#each (range (max 2 (sub currentPage 2)) (min totalPages (add currentPage 2)))}}
                                <li class="page-item {{#if (eq this ../currentPage)}}active{{/if}}">
                                    <a class="page-link" href="#" data-page="{{this}}">{{this}}</a>
                                </li>
                                {{/each}}

                                <!-- Right Ellipsis -->
                                {{#if (lt currentPage (sub totalPages 3))}}
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                                {{/if}}

                                <!-- Last Page -->
                                {{#if (gt totalPages 1)}}
                                <li class="page-item {{#if (eq totalPages currentPage)}}active{{/if}}">
                                    <a class="page-link" href="#" data-page="{{totalPages}}">{{totalPages}}</a>
                                </li>
                                {{/if}}

                                <!-- Next Button -->
                                {{#if (lt currentPage totalPages)}}
                                <li class="page-item">
                                    <a class="page-link" href="#" data-page="{{add currentPage 1}}">&raquo;</a>
                                </li>
                                {{/if}}
                                <li class="page-item">
                                    <input type="number" id="gotoPage" min="1" max="{{totalPages}}" class="form-control"
                                        placeholder="Page"
                                        style="width: 80px; margin-left: 20px; display: inline-block; text-align: center;">
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-xxl-3 d-flex order-1 order-xxl-1">
                    <div class="card flex-fill" style="height: 500px;">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Calendar</h5>
                        </div>
                        <div class="card-body d-flex">
                            <div class="align-self-center w-100">
                                <div class="chart">
                                    <div id="datetimepicker-dashboard"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<script src="/js/sensor_chart.js"></script>
<script src="/js/pagination.js"></script>
<script>
    let sensorChart;
    $(document).ready(function () {
        $('#time').datepicker({
            format: 'dd/mm/yyyy', // Format to match your filter
            autoclose: true,
            todayHighlight: true
        }).datepicker("setDate", new Date());

        $("#filterForm").submit(function (e) {
            e.preventDefault(); // Prevent page reload
            let filter_type = $("#filter-type").val();
            let time = $("#time").val();

            //getDataSheet(factory, location, sensor_id, time, 1);
            getDataChart(filter_type, time);
        });

        function getDataChart(type, time) {
            console.log("getDataChart", type, time);
            $.ajax({
                url: `/sensors/workshop-chart-data`,
                method: 'GET',
                data: { type, time },
                dataType: "json",
                success: function (response) {
                    const { labels, F1, F2, F3, F4 } = response;

                    console.log("Filter type: ", type);
                    console.log("Data: ", F1[type]);
                    if(sensorChart) {
                        sensorChart.destroy();
                    }
                    sensorChart = createFactoryLineChart("chartjs-dashboard-line", labels, F1[type], F2[type], F3[type], F4[type]);
                }
            });
        }

        function getDataSheet(time, page) {
            $.ajax({
                url: `/sensors/workshop-chart/page`,
                method: "GET",
                data: { time, page },
                dataType: "json",
                success: function (response) {
                    let tableBody = $("#tableBody");
                    let pagination = $("#pagination");

                    // Clear old data
                    tableBody.empty();
                    pagination.empty();

                    // Populate table with new data
                    response.data.forEach((item, index) => {
                        tableBody.append(`
                        <tr>
                            <td>${(response.currentPage - 1) * response.limit + index + 1}</td>
                            <td class="d-none d-xl-table-cell">${item.factory}</td>
                            <td class="d-none d-xl-table-cell">${item.avg_temperature}</td>
                            <td class="d-none d-xl-table-cell">${item.avg_humidity}</td>
                            <td class="d-none d-md-table-cell">${item.avg_sound}</td>
                            <td class="d-none d-md-table-cell">${item.avg_light}</td>
                            <td class="d-none d-md-table-cell">${item.date}</td>
                        </tr>
                    `);
                    });

                    // Create pagination buttons
                    createPageNumber('pagination', response.currentPage, response.totalPages);
                }
            });
        }

        function loadPage(page) {
            let factory = $("#factory").val();
            let location = $("#location").val();
            let sensor_id = $("#sensors").val();
            let time = $("#time").val();

            getDataSheet(factory, location, sensor_id, time, page);
        }

        // Handle Pagination Clicks
        $(document).on("click", ".page-link", function (event) {
            event.preventDefault();
            let page = $(this).data("page");
            loadPage(page);
        });

        // Handle "Enter" Key Press
        $("#gotoPage").on("keypress", function (e) {
            console.log('keypress', $(this).min, $(this).max, e.which)
            if (e.which === 13) { // Enter key
                let page = parseInt($(this).val());
                let minPage = parseInt($(this).attr("min"), 10);
                let maxPage = parseInt($(this).attr("max"), 10);
                if (page >= minPage && page <= maxPage) {
                    loadPage(page); // Function to load the selected page
                } else {
                    alert("Invalid page number!");
                }
            }
        });

        let filter_type = $("#filter-type").val();
        let time = $("#time").val();

        //getDataSheet(factory, location, sensor_id, time, 1);
        getDataChart(filter_type, time);
    });
    function exportExcel() {
        let time = $("#time").val();

        console.log("Exporting...");

        // Construct query string
        let queryString = $.param({ time });

        // Trigger file download
        window.location.href = `/workshop-chart/export-excel?${queryString}`;
    }
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var date = new Date(Date.now());
        var defaultDate = date.getUTCFullYear() + "-" + (date.getUTCMonth() + 1) + "-" + date.getUTCDate();
        document.getElementById("datetimepicker-dashboard").flatpickr({
            inline: true,
            prevArrow: "<span title=\"Previous month\">&laquo;</span>",
            nextArrow: "<span title=\"Next month\">&raquo;</span>",
            defaultDate: defaultDate
        });
    });
</script>