<main class="content">
    <div class="container-fluid p-0">
        <h2 class="h3 mb-3">Chart</h2>
        <div class="row">
            <div class="row">
                <div class="col-12 col-lg-8 col-xxl-9 d-flex">
                    <div class="card flex-fill">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Details Data</h5>
                        </div>
                        <div>
                            <form method="GET" id="filterForm" class="row g-3 p-2">
                                <div class="col-auto">
                                    <input type="radio" class="btn-check" name="options-outlined" id="temperature-radio"
                                        autocomplete="off" checked>
                                    <label class="btn btn-outline-primary" for="temperature-radio">Temperature</label>

                                    <input type="radio" class="btn-check" name="options-outlined" id="humidity-radio"
                                        autocomplete="off">
                                    <label class="btn btn-outline-primary" for="humidity-radio">Humidity</label>

                                    <input type="radio" class="btn-check" name="options-outlined" id="sound-radio"
                                        autocomplete="off">
                                    <label class="btn btn-outline-primary" for="sound-radio">Sound</label>

                                    <input type="radio" class="btn-check" name="options-outlined" id="light-radio"
                                        autocomplete="off">
                                    <label class="btn btn-outline-primary" for="light-radio">Light</label>
                                </div>

                                <!-- Date Filter -->
                                <div class="col-md-3">
                                    <div class="input-group date">
                                        <input type="text" name="time" id="time" class="form-control"
                                            placeholder="Date">
                                        <button type="submit" class="btn btn-primary"><i class="bi bi-funnel"></i>
                                            Filter</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="p-2">
                            <a href="javascript:void(0)" onclick="exportExcel()" class="btn btn-success">
                                <i class="fas fa-file-excel"></i> Export to Excel
                            </a>
                        </div>
                        <div class="card-body py-3">
                            <div class="chart chart-sm" style="height: 60vh;">
                                <canvas id="chartjs-dashboard-line"></canvas>
                            </div>
                        </div>
                        <table class="table table-hover my-0">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th class="d-none d-xl-table-cell">Factory</th>
                                    <th class="d-none d-md-table-cell">Temperature(&deg;C)</th>
                                    <th class="d-none d-md-table-cell">Humidity(%)</th>
                                    <th class="d-none d-md-table-cell">Sound(dB)</th>
                                    <th class="d-none d-md-table-cell">Light(Lux)</th>
                                    <th class="d-none d-md-table-cell">Time</th>
                                    <th>Date</th>
                                </tr>
                            </thead>
                            <tbody id="tableBody">
                            </tbody>
                        </table>
                        <!-- Pagination Buttons -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center mt-3" id="pagination">
                                <li class="page-item">
                                    <input type="number" id="gotoPage" min="1" max="{{totalPages}}" class="form-control"
                                        placeholder="Page"
                                        style="width: 80px; margin-left: 20px; display: inline-block; text-align: center;">
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-xxl-3 d-flex order-1 order-xxl-1">
                    <div class="card flex-fill" style="height: 500px;">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Calendar</h5>
                        </div>
                        <div class="card-body d-flex">
                            <div class="align-self-center w-100">
                                <div class="chart">
                                    <div id="datetimepicker-dashboard"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<script src="/js/sensor_chart.js"></script>
<script src="/js/pagination.js"></script>
<script>
    let sensorChart;
    $(document).ready(function () {
        $('#time').datepicker({
            format: 'dd/mm/yyyy', // Format to match your filter
            autoclose: true,
            todayHighlight: true
        }).datepicker("setDate", new Date());

        $("#filterForm").submit(function (e) {
            e.preventDefault(); // Prevent page reload
            let id = document.querySelector('input[name="options-outlined"]:checked').id;
            let time = $("#time").val();
            let filter_type = getTypeChart(id);
            getDataChart(filter_type, time);
        });

        function getTypeChart(id) {
            let type = '';
            switch (id) {
                case "temperature-radio":
                    type = "temperatures"; break;
                case "humidity-radio":
                    type = "humidities"; break;
                case "sound-radio":
                    type = "sounds"; break;
                case "light-radio":
                    type = "lights"; break;
            }
            return type;
        }

        document.querySelectorAll('input[name="options-outlined"]').forEach((radio) => {
            radio.addEventListener('change', function () {
                let type = getTypeChart(this.id);
                if (type != '') {
                    let time = $("#time").val();  // You can dynamically set this
                    getDataChart(type, time);
                }
            });
        });

        // Initial call for the checked radio button
        document.querySelector('input[name="options-outlined"]:checked').dispatchEvent(new Event('change'));

        function getDataChart(type, time) {
            console.log("getDataChart", type, time);
            $.ajax({
                url: `/sensors/workshop-chart-data`,
                method: 'GET',
                data: { type, time },
                dataType: "json",
                success: function (response) {
                    const { labels, F1, F2, F3, F4 } = response;

                    console.log("Filter type: ", type);
                    console.log("Data: ", F1[type]);
                    if (sensorChart) {
                        sensorChart.destroy();
                    }
                    sensorChart = createFactoryLineChart("chartjs-dashboard-line", labels, F1[type], F2[type], F3[type], F4[type]);
                }
            });
        }

        function getDataSheet(time, page) {
            $.ajax({
                url: `/sensors/workshop-chart/page`,
                method: "GET",
                data: { time, page },
                dataType: "json",
                success: function (response) {
                    let tableBody = $("#tableBody");
                    let pagination = $("#pagination");

                    // Clear old data
                    tableBody.empty();
                    pagination.empty();

                    // Populate table with new data
                    response.data.forEach((item, index) => {
                        tableBody.append(`
                        <tr>
                            <td>${(response.currentPage - 1) * response.limit + index + 1}</td>
                            <td class="d-none d-xl-table-cell">${item.factory}</td>
                            <td class="d-none d-xl-table-cell">${item.avg_temperature}</td>
                            <td class="d-none d-xl-table-cell">${item.avg_humidity}</td>
                            <td class="d-none d-md-table-cell">${item.avg_sound}</td>
                            <td class="d-none d-md-table-cell">${item.avg_light}</td>
                            <td class="d-none d-md-table-cell">${item.hour}h</td>
                            <td class="d-none d-md-table-cell">${item.date}</td>
                        </tr>
                    `);
                    });

                    // Create pagination buttons
                    createPageNumber('pagination', response.currentPage, response.totalPages);
                }
            });
        }

        function loadPage(page) {
            let time = $("#time").val();
            getDataSheet(time, page);
        }

        // Handle Pagination Clicks
        $(document).on("click", ".page-link", function (event) {
            event.preventDefault();
            let page = $(this).data("page");
            loadPage(page);
        });

        // Handle "Enter" Key Press
        $("#gotoPage").on("keypress", function (e) {
            console.log('keypress', $(this).min, $(this).max, e.which)
            if (e.which === 13) { // Enter key
                let page = parseInt($(this).val());
                let minPage = parseInt($(this).attr("min"), 10);
                let maxPage = parseInt($(this).attr("max"), 10);
                if (page >= minPage && page <= maxPage) {
                    loadPage(page); // Function to load the selected page
                } else {
                    alert("Invalid page number!");
                }
            }
        });
        loadPage(1);
    });
    function exportExcel() {
        let time = $("#time").val();

        console.log("Exporting...");

        // Construct query string
        let queryString = $.param({ time });

        // Trigger file download
        window.location.href = `/sensors/workshop-chart/export-excel?${queryString}`;
    }
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var date = new Date(Date.now());
        var defaultDate = date.getUTCFullYear() + "-" + (date.getUTCMonth() + 1) + "-" + date.getUTCDate();
        document.getElementById("datetimepicker-dashboard").flatpickr({
            inline: true,
            prevArrow: "<span title=\"Previous month\">&laquo;</span>",
            nextArrow: "<span title=\"Next month\">&raquo;</span>",
            defaultDate: defaultDate
        });
    });
</script>